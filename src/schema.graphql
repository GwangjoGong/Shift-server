type CreateDayResponse {
  ok: Boolean!
  error: String
}

type Mutation {
  CreateDay(dayNumber: Int!, timetableId: Int!): CreateDayResponse!
  CreateOrganization(name: String!, loginId: String!, password: String!): CreateOrganizationResponse!
  OrganizationSignIn(loginId: String!, password: String!): OrganizationSignInResponse!
  CreateSlot(startTime: String!, endTime: String!, dayId: Int!, personalCode: String!, organizationId: Int!): CreateSlotResponse!
  CreateTimeTable(yearMonthWeek: String!): CreateTimeTableResponse!
  CreateUserToOrganization(personalCode: String!, name: String!, phoneNumber: String!): CreateUserToOrganizationResponse!
  RemoveUserFromOrganization(userId: Int!): RemoveUserFromOrganizationResponse!
}

type GetDaysResponse {
  ok: Boolean!
  error: String
  days: [Day]
}

type Query {
  GetDays(timetableId: Int!): GetDaysResponse!
  GetOrganizationProfile(orgId: Int!): GetOrganizationProfileResponse!
  GetSlots(dayId: Int!): GetSlotsResponse!
  GetTimeTables: GetTimeTablesResponse!
  GetUsers: GetUsersResponse!
}

type Day {
  id: Int!
  dayNumber: Int!
  timetableId: Int
  timetable: TimeTable!
  slots: [Slot]
  createdAt: String!
  updatedAt: String
}

type CreateOrganizationResponse {
  ok: Boolean!
  error: String
}

type GetOrganizationProfileResponse {
  ok: Boolean!
  error: String
  organization: Organization
}

type OrganizationSignInResponse {
  ok: Boolean!
  error: String
  token: String
}

type Organization {
  id: Int!
  name: String!
  loginId: String!
  password: String!
  users: [User]
  timetables: [TimeTable]
  createdAt: String!
  updatedAt: String
}

type CreateSlotResponse {
  ok: Boolean!
  error: String
}

type GetSlotsResponse {
  ok: Boolean!
  error: String
  slots: [Slot]
}

type Slot {
  id: Int!
  startTime: String!
  endTime: String!
  userId: Int
  user: User!
  dayId: Int
  day: Day!
  createdAt: String!
  updatedAt: String
}

type CreateTimeTableResponse {
  ok: Boolean!
  error: String
}

type GetTimeTablesResponse {
  ok: Boolean!
  error: String
  timetables: [TimeTable]
}

type TimeTable {
  id: Int!
  yearMonthWeek: String!
  organizationId: Int
  organization: Organization!
  days: [Day]
  createdAt: String!
  updatedAt: String
}

type CreateUserToOrganizationResponse {
  ok: Boolean!
  error: String
}

type GetUsersResponse {
  ok: Boolean!
  error: String
  users: [User]
}

type RemoveUserFromOrganizationResponse {
  ok: Boolean!
  error: String
}

type User {
  id: Int!
  personalCode: String!
  name: String!
  phoneNumber: String!
  organizationId: Int
  organization: Organization!
  slots: [Slot]
  createdAt: String!
  updatedAt: String
}
